/**
 * üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞–Ω–≥—Ä–∞–º–º—É
 *
 * –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isPangram(sentence), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–Ω–≥—Ä–∞–º–º–æ–π.
    - –ü–∞–Ω–≥—Ä–∞–º–º–∞ ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∞–ª—Ñ–∞–≤–∏—Ç–∞ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑.
    - –°—Ç—Ä–æ–∫–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è –±—É–∫–≤–∞–º–∏, –∏—Ö —Å–ª–µ–¥—É–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å.
 *
 * @param {string[]} sentence
 * @returns {boolean}
 *
 * @example
    Input 1: "the"
    Output 1: false
    Input 2: "TheQuickBrownFoxJumpsOverTheLazyDog"
    Output 2: true
 */

// import { assertEquals } from "../../helpers/assertEquals";

function assertEquals(actual, expected, description) {
  const passed = JSON.stringify(actual) === JSON.stringify(expected);
  console.log(`${passed ? "‚úÖ" : "‚ùå"} ${description}`);
}

const LETTERS = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
];

function isPangram(sentence) {
  const normalizedStr = sentence.toLowerCase().replace(/[^a-z]/g, "");
  const uniqueSymbols = new Set(normalizedStr);

  return uniqueSymbols.size === LETTERS.length;
}

assertEquals(isPangram("the"), false, "Sentence isn't pangram.");
assertEquals(
  isPangram("thequickbrownfoxjumpsoverthelazydog. sd sd"),
  true,
  "Sentence is pangram."
);
