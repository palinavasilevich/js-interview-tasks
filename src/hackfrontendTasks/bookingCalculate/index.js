/**
 * üìù –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ –æ—Ç–µ–ª–µ
 *
 *  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é bookingCalculate(nights, checkInDate), 
 *  –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ –æ—Ç–µ–ª–µ. 
 * 
 *  –£—Å–ª–æ–≤–∏—è:
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
    nights (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.
    checkInDate (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π) ‚Äî –¥–∞—Ç–∞ –∑–∞—Å–µ–ª–µ–Ω–∏—è. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞.
    –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–Ω—è –Ω–µ–¥–µ–ª–∏:
    –ë—É–¥–Ω–∏–µ –¥–Ω–∏ (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫‚Äì–ø—è—Ç–Ω–∏—Ü–∞) ‚Äî 1500 —Ä—É–±.
    –í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏ (—Å—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) ‚Äî 2200 —Ä—É–±.
 *
 * @param {number} nights
 * @param {string} checkInDate
 * @returns {number}
 *
 * @example
    Input 1: 1, new Date("2023-11-11")
    Output 1: 2200

    Input 2: 5, new Date("2023-11-06")
    Output 2: 7500
 */

const prices = {
  weekday: 1500,
  holiday: 2200,
};

export function bookingCalculate1(nights, checkInDate = new Date()) {
  if (!nights || nights < 1) return 0;
  let totalPrice = 0;

  const dayWeekOfCheckIn = checkInDate.getDay();

  for (let i = 0; i < nights; i++) {
    const currentDayWeek = dayWeekOfCheckIn + i;

    if (currentDayWeek % 7 === 6 || currentDayWeek % 7 === 0) {
      totalPrice += prices.holiday;
    } else {
      totalPrice += prices.weekday;
    }
  }

  return totalPrice;
}

export function bookingCalculate(nights, checkInDate = new Date()) {
  if (!nights || nights < 1) return 0;
  let totalPrice = 0;

  for (let i = 0; i < nights; i++) {
    const currentDate = new Date(checkInDate);
    currentDate.setDate(checkInDate.getDate() + i);

    const day = currentDate.getDay();
    totalPrice += day === 0 || day === 6 ? prices.holiday : prices.weekday;
  }

  return totalPrice;
}
