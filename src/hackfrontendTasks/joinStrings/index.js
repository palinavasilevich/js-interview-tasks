/**
 * üìù –°–∫–ª–µ–∏–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
 *
 * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é joinStrings(separator, ...strings), 
 * –∫–æ—Ç–æ—Ä–∞—è —Å–∫–ª–µ–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å. 
 * –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫—É-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, 
 * –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã ‚Äî —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å. 
 * –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –Ω–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É.
 *
 * @param {string} separator
 * @param {string} strings
 * @returns {string}
 *
 * @example
    Input 1: ' ', 'Hello', 'World'
    Output 1: 'Hello World'

    Input 2: '-', 'a', 'b', 'c', 'd'
    Output 2: 'a-b-c-d'

    Input 3: ':', 'one', 'two'
    Output 3: 'one:two'

    Input 4: '/', '2023', '01', '01'
    Output 4: '2023/01/01'
 */

export function joinStrings(separator, ...strings) {
  if (strings.length === 0) return "";

  let result = "";

  for (let i = 0; i < strings.length; i++) {
    const currentStr = strings[i];

    result += `${currentStr}${i !== strings.length - 1 ? separator : ""}`;
  }

  return result;
}

////
function joinStringsAlternative(separator, ...strings) {
  if (strings.length === 0) return "";

  return strings.join(separator);
}
