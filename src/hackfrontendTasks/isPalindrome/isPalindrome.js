/**
 * üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º
 *
 *   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isPalindrome(str), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è 
 *   —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º. 
 *   –°—Ç—Ä–æ–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, –µ—Å–ª–∏ –æ–Ω–∞ —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ, 
 *   –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤, –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è.
 *
 * @param {string} str
 * @returns {boolean}
 *
 * @example
    Input 1: "–ê —Ä–æ–∑–∞ —É–ø–∞–ª–∞ –Ω–∞ –ª–∞–ø—É –ê–∑–æ—Ä–∞"
    Output 1: true
    Input 2: "Do geese see God?"
    Output 2: true
    Input 3: "A man, a plan, a canal, Panama"
    Output 3: true
 */

function assertEquals(actual, expected, description) {
  const passed = JSON.stringify(actual) === JSON.stringify(expected);
  console.log(`${passed ? "‚úÖ" : "‚ùå"} ${description}`);
}

function isPalindrome(str) {
  const normalized = str.toLowerCase().replace(/[^a-z–∞-—è—ë0-9]/gi, "");
  return normalized === normalized.split("").reverse().join("");
}

assertEquals(
  isPalindrome("A man, a plan, a canal, Panama"),
  true,
  "String is palindrome."
);

assertEquals(
  isPalindrome("A man, a plan, a canal, Panamas"),
  false,
  "String isn't palindrome."
);
